#!/bin/sh

set -e -o pipefail -x

VERSION=0.3.0 # Target version of FalconJS

ORIGINAL_SWAGGER=./specs/swagger.json
TRANSFORM=./specs/transformation.jq
FINAL_SWAGGER=./specs/final.json

CONTAINER_TOOL=
if command -v docker >/dev/null 2>&1; then
   CONTAINER_TOOL="docker"
elif command -v podman >/dev/null 2>&1; then
   CONTAINER_TOOL="podman"
else
   echo "No container runtime tool found. Please install either Docker or Podman."
   exit 1
fi

if [ ! -f $ORIGINAL_SWAGGER ]; then
   echo "couldn't find $ORIGINAL_SWAGGER (you need to download it manually)"
   exit 1
fi

SPEC_VERSION=$(jq -r .info.version specs/swagger.json)

jq -f ./specs/transformation.jq $ORIGINAL_SWAGGER > $FINAL_SWAGGER

typ=typescript-fetch
build_dir="specs/out/$typ"
rm -rf "./$build_dir"

if [ -z "$1" ]; then
   BUILD_CONTAINER="openapitools/openapi-generator-cli:v7.7.0"
   $CONTAINER_TOOL pull "$BUILD_CONTAINER"
else
   BUILD_CONTAINER="$1"
fi

$CONTAINER_TOOL run --rm \
       -v "$PWD":/falcon-js "$BUILD_CONTAINER" generate \
       -i /falcon-js/$FINAL_SWAGGER \
       -g "${typ}" \
       -o "/falcon-js/$build_dir" \
       --additional-properties=httpUserAgent=falconjs/$VERSION \
       --additional-properties=packageName=falconjs \
       --additional-properties=packageVersion=$VERSION \
       --additional-properties=npmVersion=$VERSION \
       --additional-properties=disallowAdditionalPropertiesIfNotPresent=false \
       --additional-properties=useSingleRequestParameter=false \
       --additional-properties=prefixParameterInterfaces=true \
       --additional-properties=npmName=crowdstrike-falcon \
       --additional-properties=npmRepository=https://github.com/crowdstrike/falcon-js \
       --additional-properties=supportsES6=true \
       --additional-properties=typescriptThreePlus=true \
       --skip-validate-spec

grep -lr ./src -e 'This class is auto generated by OpenAPI Generator' | xargs rm --

cp -a ./${build_dir}/src/* ./src/

npm run format:fix
npm run lint:fix
npm run lint
npm run build

git add src/
git commit -m "Re-generate the codebase using swagger $SPEC_VERSION"
