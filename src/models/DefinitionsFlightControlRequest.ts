/* tslint:disable */
/* eslint-disable */
/**
 * CrowdStrike API Specification
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and examples, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation).     To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`.    Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: rolling
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DefinitionsFlightControlRequest
 */
export interface DefinitionsFlightControlRequest {
    /**
     * Flag to specify the workflow should apply to all child CIDs
     * @type {boolean}
     * @memberof DefinitionsFlightControlRequest
     */
    allCids: boolean;
    /**
     * Child CIDs that are excluded from workflow propagation used in conjunction with the all_cids flag
     * @type {Array<string>}
     * @memberof DefinitionsFlightControlRequest
     */
    excludedCids?: Array<string>;
    /**
     * Flag to specify whether the workflow should apply to the current (parent) CID, in addition to specified child CIDs
     * @type {boolean}
     * @memberof DefinitionsFlightControlRequest
     */
    includeParentCid: boolean;
    /**
     * List of child CIDs that the workflow should apply to if not propagating to all CIDs
     * @type {Array<string>}
     * @memberof DefinitionsFlightControlRequest
     */
    selectedCids?: Array<string>;
}

/**
 * Check if a given object implements the DefinitionsFlightControlRequest interface.
 */
export function instanceOfDefinitionsFlightControlRequest(value: object): value is DefinitionsFlightControlRequest {
    if (!('allCids' in value) || value['allCids'] === undefined) return false;
    if (!('includeParentCid' in value) || value['includeParentCid'] === undefined) return false;
    return true;
}

export function DefinitionsFlightControlRequestFromJSON(json: any): DefinitionsFlightControlRequest {
    return DefinitionsFlightControlRequestFromJSONTyped(json, false);
}

export function DefinitionsFlightControlRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DefinitionsFlightControlRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'allCids': json['all_cids'],
        'excludedCids': json['excluded_cids'] == null ? undefined : json['excluded_cids'],
        'includeParentCid': json['include_parent_cid'],
        'selectedCids': json['selected_cids'] == null ? undefined : json['selected_cids'],
    };
}

export function DefinitionsFlightControlRequestToJSON(value?: DefinitionsFlightControlRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'all_cids': value['allCids'],
        'excluded_cids': value['excludedCids'],
        'include_parent_cid': value['includeParentCid'],
        'selected_cids': value['selectedCids'],
    };
}

