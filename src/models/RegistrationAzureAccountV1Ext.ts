/* tslint:disable */
/* eslint-disable */
/**
 * CrowdStrike API Specification
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and examples, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation).     To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`.    Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: rolling
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { DomainAzureRoleAssignment } from "./DomainAzureRoleAssignment";
import { DomainAzureRoleAssignmentFromJSON, DomainAzureRoleAssignmentFromJSONTyped, DomainAzureRoleAssignmentToJSON } from "./DomainAzureRoleAssignment";
import type { DomainCloudScope } from "./DomainCloudScope";
import { DomainCloudScopeFromJSON, DomainCloudScopeFromJSONTyped, DomainCloudScopeToJSON } from "./DomainCloudScope";
import type { DomainCondition } from "./DomainCondition";
import { DomainConditionFromJSON, DomainConditionFromJSONTyped, DomainConditionToJSON } from "./DomainCondition";
import type { DomainPermission } from "./DomainPermission";
import { DomainPermissionFromJSON, DomainPermissionFromJSONTyped, DomainPermissionToJSON } from "./DomainPermission";

/**
 *
 * @export
 * @interface RegistrationAzureAccountV1Ext
 */
export interface RegistrationAzureAccountV1Ext {
    /**
     *
     * @type {Date}
     * @memberof RegistrationAzureAccountV1Ext
     */
    createdAt: Date;
    /**
     *
     * @type {Date}
     * @memberof RegistrationAzureAccountV1Ext
     */
    deletedAt: Date;
    /**
     *
     * @type {number}
     * @memberof RegistrationAzureAccountV1Ext
     */
    iD: number;
    /**
     *
     * @type {Date}
     * @memberof RegistrationAzureAccountV1Ext
     */
    updatedAt: Date;
    /**
     *
     * @type {string}
     * @memberof RegistrationAzureAccountV1Ext
     */
    accountType?: string;
    /**
     * Permissions status returned via API.
     * @type {Array<DomainPermission>}
     * @memberof RegistrationAzureAccountV1Ext
     */
    azurePermissionsStatus: Array<DomainPermission>;
    /**
     *
     * @type {string}
     * @memberof RegistrationAzureAccountV1Ext
     */
    cid: string;
    /**
     *
     * @type {string}
     * @memberof RegistrationAzureAccountV1Ext
     */
    clientId?: string;
    /**
     *
     * @type {Array<DomainCloudScope>}
     * @memberof RegistrationAzureAccountV1Ext
     */
    cloudScopes?: Array<DomainCloudScope>;
    /**
     *
     * @type {Array<DomainCondition>}
     * @memberof RegistrationAzureAccountV1Ext
     */
    conditions?: Array<DomainCondition>;
    /**
     *
     * @type {Date}
     * @memberof RegistrationAzureAccountV1Ext
     */
    credentialsEndDate?: Date;
    /**
     *
     * @type {string}
     * @memberof RegistrationAzureAccountV1Ext
     */
    credentialsType?: string;
    /**
     * Default Azure Subscription ID to provision shared IOA infrastructure.
     * @type {string}
     * @memberof RegistrationAzureAccountV1Ext
     */
    defaultSubscriptionId?: string;
    /**
     *
     * @type {string}
     * @memberof RegistrationAzureAccountV1Ext
     */
    environment?: string;
    /**
     *
     * @type {string}
     * @memberof RegistrationAzureAccountV1Ext
     */
    objectId?: string;
    /**
     *
     * @type {string}
     * @memberof RegistrationAzureAccountV1Ext
     */
    publicCertificate?: string;
    /**
     *
     * @type {string}
     * @memberof RegistrationAzureAccountV1Ext
     */
    publicCertificateRaw?: string;
    /**
     *
     * @type {Array<DomainAzureRoleAssignment>}
     * @memberof RegistrationAzureAccountV1Ext
     */
    roleAssignments?: Array<DomainAzureRoleAssignment>;
    /**
     * Whether to show modal on the UI instructing existing D4C Azure customer to reregister subscriptions for CSPM.
     * @type {boolean}
     * @memberof RegistrationAzureAccountV1Ext
     */
    showModal: boolean;
    /**
     * Account registration status.
     * @type {string}
     * @memberof RegistrationAzureAccountV1Ext
     */
    status?: string;
    /**
     * Azure Subscription ID.
     * @type {string}
     * @memberof RegistrationAzureAccountV1Ext
     */
    subscriptionId?: string;
    /**
     * Azure Subscription Name.
     * @type {string}
     * @memberof RegistrationAzureAccountV1Ext
     */
    subscriptionName?: string;
    /**
     * Azure Tenant ID to use.
     * @type {string}
     * @memberof RegistrationAzureAccountV1Ext
     */
    tenantId?: string;
    /**
     *
     * @type {number}
     * @memberof RegistrationAzureAccountV1Ext
     */
    yearsValid?: number;
}

/**
 * Check if a given object implements the RegistrationAzureAccountV1Ext interface.
 */
export function instanceOfRegistrationAzureAccountV1Ext(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "deletedAt" in value;
    isInstance = isInstance && "iD" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "azurePermissionsStatus" in value;
    isInstance = isInstance && "cid" in value;
    isInstance = isInstance && "showModal" in value;

    return isInstance;
}

export function RegistrationAzureAccountV1ExtFromJSON(json: any): RegistrationAzureAccountV1Ext {
    return RegistrationAzureAccountV1ExtFromJSONTyped(json, false);
}

export function RegistrationAzureAccountV1ExtFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegistrationAzureAccountV1Ext {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        createdAt: new Date(json["CreatedAt"]),
        deletedAt: new Date(json["DeletedAt"]),
        iD: json["ID"],
        updatedAt: new Date(json["UpdatedAt"]),
        accountType: !exists(json, "account_type") ? undefined : json["account_type"],
        azurePermissionsStatus: (json["azure_permissions_status"] as Array<any>).map(DomainPermissionFromJSON),
        cid: json["cid"],
        clientId: !exists(json, "client_id") ? undefined : json["client_id"],
        cloudScopes: !exists(json, "cloud_scopes") ? undefined : (json["cloud_scopes"] as Array<any>).map(DomainCloudScopeFromJSON),
        conditions: !exists(json, "conditions") ? undefined : (json["conditions"] as Array<any>).map(DomainConditionFromJSON),
        credentialsEndDate: !exists(json, "credentials_end_date") ? undefined : new Date(json["credentials_end_date"]),
        credentialsType: !exists(json, "credentials_type") ? undefined : json["credentials_type"],
        defaultSubscriptionId: !exists(json, "default_subscription_id") ? undefined : json["default_subscription_id"],
        environment: !exists(json, "environment") ? undefined : json["environment"],
        objectId: !exists(json, "object_id") ? undefined : json["object_id"],
        publicCertificate: !exists(json, "public_certificate") ? undefined : json["public_certificate"],
        publicCertificateRaw: !exists(json, "public_certificate_raw") ? undefined : json["public_certificate_raw"],
        roleAssignments: !exists(json, "role_assignments") ? undefined : (json["role_assignments"] as Array<any>).map(DomainAzureRoleAssignmentFromJSON),
        showModal: json["show_modal"],
        status: !exists(json, "status") ? undefined : json["status"],
        subscriptionId: !exists(json, "subscription_id") ? undefined : json["subscription_id"],
        subscriptionName: !exists(json, "subscription_name") ? undefined : json["subscription_name"],
        tenantId: !exists(json, "tenant_id") ? undefined : json["tenant_id"],
        yearsValid: !exists(json, "years_valid") ? undefined : json["years_valid"],
    };
}

export function RegistrationAzureAccountV1ExtToJSON(value?: RegistrationAzureAccountV1Ext | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        CreatedAt: value.createdAt.toISOString(),
        DeletedAt: value.deletedAt.toISOString(),
        ID: value.iD,
        UpdatedAt: value.updatedAt.toISOString(),
        account_type: value.accountType,
        azure_permissions_status: (value.azurePermissionsStatus as Array<any>).map(DomainPermissionToJSON),
        cid: value.cid,
        client_id: value.clientId,
        cloud_scopes: value.cloudScopes === undefined ? undefined : (value.cloudScopes as Array<any>).map(DomainCloudScopeToJSON),
        conditions: value.conditions === undefined ? undefined : (value.conditions as Array<any>).map(DomainConditionToJSON),
        credentials_end_date: value.credentialsEndDate === undefined ? undefined : value.credentialsEndDate.toISOString(),
        credentials_type: value.credentialsType,
        default_subscription_id: value.defaultSubscriptionId,
        environment: value.environment,
        object_id: value.objectId,
        public_certificate: value.publicCertificate,
        public_certificate_raw: value.publicCertificateRaw,
        role_assignments: value.roleAssignments === undefined ? undefined : (value.roleAssignments as Array<any>).map(DomainAzureRoleAssignmentToJSON),
        show_modal: value.showModal,
        status: value.status,
        subscription_id: value.subscriptionId,
        subscription_name: value.subscriptionName,
        tenant_id: value.tenantId,
        years_valid: value.yearsValid,
    };
}
