/* tslint:disable */
/* eslint-disable */
/**
 * CrowdStrike API Specification
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and more information about API endpoints that don\'t yet support OAuth2, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation). To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`. Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: rolling
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface StoreDomainOwnerDetailsV1
 */
export interface StoreDomainOwnerDetailsV1 {
    /**
     * Owner's home cloud ID
     * @type {number}
     * @memberof StoreDomainOwnerDetailsV1
     */
    homeCloudId: number;
    /**
     *
     * @type {string}
     * @memberof StoreDomainOwnerDetailsV1
     */
    id: string;
    /**
     * relative S3 path to the owning entities logo
     * @type {string}
     * @memberof StoreDomainOwnerDetailsV1
     */
    logo?: string;
    /**
     * name of the company/entity that created the app
     * @type {string}
     * @memberof StoreDomainOwnerDetailsV1
     */
    name?: string;
    /**
     * email address for sales related inquiries
     * @type {string}
     * @memberof StoreDomainOwnerDetailsV1
     */
    salesEmail?: string;
    /**
     * email address for support related inquiries
     * @type {string}
     * @memberof StoreDomainOwnerDetailsV1
     */
    supportEmail?: string;
    /**
     * link to the owning entities website
     * @type {string}
     * @memberof StoreDomainOwnerDetailsV1
     */
    website?: string;
}

/**
 * Check if a given object implements the StoreDomainOwnerDetailsV1 interface.
 */
export function instanceOfStoreDomainOwnerDetailsV1(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "homeCloudId" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function StoreDomainOwnerDetailsV1FromJSON(json: any): StoreDomainOwnerDetailsV1 {
    return StoreDomainOwnerDetailsV1FromJSONTyped(json, false);
}

export function StoreDomainOwnerDetailsV1FromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreDomainOwnerDetailsV1 {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        homeCloudId: json["home_cloud_id"],
        id: json["id"],
        logo: !exists(json, "logo") ? undefined : json["logo"],
        name: !exists(json, "name") ? undefined : json["name"],
        salesEmail: !exists(json, "sales_email") ? undefined : json["sales_email"],
        supportEmail: !exists(json, "support_email") ? undefined : json["support_email"],
        website: !exists(json, "website") ? undefined : json["website"],
    };
}

export function StoreDomainOwnerDetailsV1ToJSON(value?: StoreDomainOwnerDetailsV1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        home_cloud_id: value.homeCloudId,
        id: value.id,
        logo: value.logo,
        name: value.name,
        sales_email: value.salesEmail,
        support_email: value.supportEmail,
        website: value.website,
    };
}
