/* tslint:disable */
/* eslint-disable */
/**
 * CrowdStrike API Specification
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and examples, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation).     To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`.    Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: rolling
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TriggersTriggerExtField } from './TriggersTriggerExtField';
import {
    TriggersTriggerExtFieldFromJSON,
    TriggersTriggerExtFieldFromJSONTyped,
    TriggersTriggerExtFieldToJSON,
} from './TriggersTriggerExtField';

/**
 * 
 * @export
 * @interface TriggersTriggerExt
 */
export interface TriggersTriggerExt {
    /**
     * Required api scope to use this trigger.
     * @type {string}
     * @memberof TriggersTriggerExt
     */
    apiScope: string;
    /**
     * Category for the trigger.
     * @type {string}
     * @memberof TriggersTriggerExt
     */
    category: string;
    /**
     * Description for the trigger.
     * @type {string}
     * @memberof TriggersTriggerExt
     */
    description?: string;
    /**
     * Nested fields of this object, only set when field type is complex
     * @type {Array<TriggersTriggerExtField>}
     * @memberof TriggersTriggerExt
     */
    fields?: Array<TriggersTriggerExtField>;
    /**
     * Unique identifier for the trigger.
     * @type {string}
     * @memberof TriggersTriggerExt
     */
    id: string;
    /**
     * User friendly display name for the trigger, this the fully qualified name that provides the context hierarchy.
     * @type {string}
     * @memberof TriggersTriggerExt
     */
    name: string;
    /**
     * Version of the trigger.
     * @type {string}
     * @memberof TriggersTriggerExt
     */
    version: string;
}

/**
 * Check if a given object implements the TriggersTriggerExt interface.
 */
export function instanceOfTriggersTriggerExt(value: object): value is TriggersTriggerExt {
    if (!('apiScope' in value) || value['apiScope'] === undefined) return false;
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    return true;
}

export function TriggersTriggerExtFromJSON(json: any): TriggersTriggerExt {
    return TriggersTriggerExtFromJSONTyped(json, false);
}

export function TriggersTriggerExtFromJSONTyped(json: any, ignoreDiscriminator: boolean): TriggersTriggerExt {
    if (json == null) {
        return json;
    }
    return {
        
        'apiScope': json['api_scope'],
        'category': json['category'],
        'description': json['description'] == null ? undefined : json['description'],
        'fields': json['fields'] == null ? undefined : ((json['fields'] as Array<any>).map(TriggersTriggerExtFieldFromJSON)),
        'id': json['id'],
        'name': json['name'],
        'version': json['version'],
    };
}

export function TriggersTriggerExtToJSON(value?: TriggersTriggerExt | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'api_scope': value['apiScope'],
        'category': value['category'],
        'description': value['description'],
        'fields': value['fields'] == null ? undefined : ((value['fields'] as Array<any>).map(TriggersTriggerExtFieldToJSON)),
        'id': value['id'],
        'name': value['name'],
        'version': value['version'],
    };
}

