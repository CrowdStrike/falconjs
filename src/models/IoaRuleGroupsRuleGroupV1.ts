/* tslint:disable */
/* eslint-disable */
/**
 * CrowdStrike API Specification
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and examples, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation).     To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`.    Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: rolling
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 * An IOA rule group which contains a set of IOA rules
 * @export
 * @interface IoaRuleGroupsRuleGroupV1
 */
export interface IoaRuleGroupsRuleGroupV1 {
    /**
     *
     * @type {string}
     * @memberof IoaRuleGroupsRuleGroupV1
     */
    comment: string;
    /**
     * The last attempted time CFS got this data on the rule group
     * @type {Date}
     * @memberof IoaRuleGroupsRuleGroupV1
     */
    committedTimestamp: Date;
    /**
     * The email of the user which created the rule group
     * @type {string}
     * @memberof IoaRuleGroupsRuleGroupV1
     */
    createdBy: string;
    /**
     * The time at which the policy was created
     * @type {Date}
     * @memberof IoaRuleGroupsRuleGroupV1
     */
    createdTimestamp: Date;
    /**
     *
     * @type {string}
     * @memberof IoaRuleGroupsRuleGroupV1
     */
    customerId: string;
    /**
     *
     * @type {boolean}
     * @memberof IoaRuleGroupsRuleGroupV1
     */
    deleted: boolean;
    /**
     * An additional description of the group or the rules it contains
     * @type {string}
     * @memberof IoaRuleGroupsRuleGroupV1
     */
    description: string;
    /**
     *
     * @type {boolean}
     * @memberof IoaRuleGroupsRuleGroupV1
     */
    enabled: boolean;
    /**
     * The identifier of this IOA rule group
     * @type {string}
     * @memberof IoaRuleGroupsRuleGroupV1
     */
    id: string;
    /**
     * The email of the user which last modified the rule group
     * @type {string}
     * @memberof IoaRuleGroupsRuleGroupV1
     */
    modifiedBy: string;
    /**
     * The time at which the policy was last modified
     * @type {Date}
     * @memberof IoaRuleGroupsRuleGroupV1
     */
    modifiedTimestamp: Date;
    /**
     * The name of the group
     * @type {string}
     * @memberof IoaRuleGroupsRuleGroupV1
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof IoaRuleGroupsRuleGroupV1
     */
    platform: string;
    /**
     *
     * @type {Array<string>}
     * @memberof IoaRuleGroupsRuleGroupV1
     */
    ruleIds: Array<string>;
    /**
     *
     * @type {number}
     * @memberof IoaRuleGroupsRuleGroupV1
     */
    version: number;
}

/**
 * Check if a given object implements the IoaRuleGroupsRuleGroupV1 interface.
 */
export function instanceOfIoaRuleGroupsRuleGroupV1(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "comment" in value;
    isInstance = isInstance && "committedTimestamp" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "createdTimestamp" in value;
    isInstance = isInstance && "customerId" in value;
    isInstance = isInstance && "deleted" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "enabled" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "modifiedBy" in value;
    isInstance = isInstance && "modifiedTimestamp" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "platform" in value;
    isInstance = isInstance && "ruleIds" in value;
    isInstance = isInstance && "version" in value;

    return isInstance;
}

export function IoaRuleGroupsRuleGroupV1FromJSON(json: any): IoaRuleGroupsRuleGroupV1 {
    return IoaRuleGroupsRuleGroupV1FromJSONTyped(json, false);
}

export function IoaRuleGroupsRuleGroupV1FromJSONTyped(json: any, ignoreDiscriminator: boolean): IoaRuleGroupsRuleGroupV1 {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        comment: json["comment"],
        committedTimestamp: new Date(json["committed_timestamp"]),
        createdBy: json["created_by"],
        createdTimestamp: new Date(json["created_timestamp"]),
        customerId: json["customer_id"],
        deleted: json["deleted"],
        description: json["description"],
        enabled: json["enabled"],
        id: json["id"],
        modifiedBy: json["modified_by"],
        modifiedTimestamp: new Date(json["modified_timestamp"]),
        name: json["name"],
        platform: json["platform"],
        ruleIds: json["rule_ids"],
        version: json["version"],
    };
}

export function IoaRuleGroupsRuleGroupV1ToJSON(value?: IoaRuleGroupsRuleGroupV1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        comment: value.comment,
        committed_timestamp: value.committedTimestamp.toISOString(),
        created_by: value.createdBy,
        created_timestamp: value.createdTimestamp.toISOString(),
        customer_id: value.customerId,
        deleted: value.deleted,
        description: value.description,
        enabled: value.enabled,
        id: value.id,
        modified_by: value.modifiedBy,
        modified_timestamp: value.modifiedTimestamp.toISOString(),
        name: value.name,
        platform: value.platform,
        rule_ids: value.ruleIds,
        version: value.version,
    };
}
