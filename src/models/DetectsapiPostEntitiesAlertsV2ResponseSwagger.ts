/* tslint:disable */
/* eslint-disable */
/**
 * CrowdStrike API Specification
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and examples, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation).     To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`.    Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: rolling
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { MsaAPIError } from "./MsaAPIError";
import { MsaAPIErrorFromJSON, MsaAPIErrorFromJSONTyped, MsaAPIErrorToJSON } from "./MsaAPIError";
import type { DetectsExternalAlert } from "./DetectsExternalAlert";
import { DetectsExternalAlertFromJSON, DetectsExternalAlertFromJSONTyped, DetectsExternalAlertToJSON } from "./DetectsExternalAlert";
import type { MsaMetaInfo } from "./MsaMetaInfo";
import { MsaMetaInfoFromJSON, MsaMetaInfoFromJSONTyped, MsaMetaInfoToJSON } from "./MsaMetaInfo";

/**
 *
 * @export
 * @interface DetectsapiPostEntitiesAlertsV2ResponseSwagger
 */
export interface DetectsapiPostEntitiesAlertsV2ResponseSwagger {
    /**
     *
     * @type {Array<MsaAPIError>}
     * @memberof DetectsapiPostEntitiesAlertsV2ResponseSwagger
     */
    errors?: Array<MsaAPIError>;
    /**
     *
     * @type {MsaMetaInfo}
     * @memberof DetectsapiPostEntitiesAlertsV2ResponseSwagger
     */
    meta: MsaMetaInfo;
    /**
     * Resources represent the slice of Alerts that were retrieved for the given Alert IDs
     * @type {Array<DetectsExternalAlert>}
     * @memberof DetectsapiPostEntitiesAlertsV2ResponseSwagger
     */
    resources: Array<DetectsExternalAlert>;
}

/**
 * Check if a given object implements the DetectsapiPostEntitiesAlertsV2ResponseSwagger interface.
 */
export function instanceOfDetectsapiPostEntitiesAlertsV2ResponseSwagger(value: object): value is DetectsapiPostEntitiesAlertsV2ResponseSwagger {
    if (!("meta" in value) || value["meta"] === undefined) return false;
    if (!("resources" in value) || value["resources"] === undefined) return false;
    return true;
}

export function DetectsapiPostEntitiesAlertsV2ResponseSwaggerFromJSON(json: any): DetectsapiPostEntitiesAlertsV2ResponseSwagger {
    return DetectsapiPostEntitiesAlertsV2ResponseSwaggerFromJSONTyped(json, false);
}

export function DetectsapiPostEntitiesAlertsV2ResponseSwaggerFromJSONTyped(json: any, ignoreDiscriminator: boolean): DetectsapiPostEntitiesAlertsV2ResponseSwagger {
    if (json == null) {
        return json;
    }
    return {
        errors: json["errors"] == null ? undefined : (json["errors"] as Array<any>).map(MsaAPIErrorFromJSON),
        meta: MsaMetaInfoFromJSON(json["meta"]),
        resources: (json["resources"] as Array<any>).map(DetectsExternalAlertFromJSON),
    };
}

export function DetectsapiPostEntitiesAlertsV2ResponseSwaggerToJSON(value?: DetectsapiPostEntitiesAlertsV2ResponseSwagger | null): any {
    if (value == null) {
        return value;
    }
    return {
        errors: value["errors"] == null ? undefined : (value["errors"] as Array<any>).map(MsaAPIErrorToJSON),
        meta: MsaMetaInfoToJSON(value["meta"]),
        resources: (value["resources"] as Array<any>).map(DetectsExternalAlertToJSON),
    };
}
