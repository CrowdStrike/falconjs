/* tslint:disable */
/* eslint-disable */
/**
 * CrowdStrike API Specification
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and examples, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation).     To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`.    Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: rolling
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainVulnerabilityActor } from './DomainVulnerabilityActor';
import {
    DomainVulnerabilityActorFromJSON,
    DomainVulnerabilityActorFromJSONTyped,
    DomainVulnerabilityActorToJSON,
} from './DomainVulnerabilityActor';
import type { DomainVulnerabilityRelatedThreat } from './DomainVulnerabilityRelatedThreat';
import {
    DomainVulnerabilityRelatedThreatFromJSON,
    DomainVulnerabilityRelatedThreatFromJSONTyped,
    DomainVulnerabilityRelatedThreatToJSON,
} from './DomainVulnerabilityRelatedThreat';
import type { DomainVulnerabilityAffectedProduct } from './DomainVulnerabilityAffectedProduct';
import {
    DomainVulnerabilityAffectedProductFromJSON,
    DomainVulnerabilityAffectedProductFromJSONTyped,
    DomainVulnerabilityAffectedProductToJSON,
} from './DomainVulnerabilityAffectedProduct';
import type { DomainVulnerabilityReport } from './DomainVulnerabilityReport';
import {
    DomainVulnerabilityReportFromJSON,
    DomainVulnerabilityReportFromJSONTyped,
    DomainVulnerabilityReportToJSON,
} from './DomainVulnerabilityReport';

/**
 * 
 * @export
 * @interface DomainVulnerability
 */
export interface DomainVulnerability {
    /**
     * List of products affected by vulnerability, specifying product and vendor
     * @type {Array<DomainVulnerabilityAffectedProduct>}
     * @memberof DomainVulnerability
     */
    affectedProducts?: Array<DomainVulnerabilityAffectedProduct>;
    /**
     * Vulnerability community identifiers, which is usually populated for the most popular vulnerabilities
     * @type {Array<string>}
     * @memberof DomainVulnerability
     */
    communityIdentifiers?: Array<string>;
    /**
     * CVE ID number with four or more digits in the sequence number portion of the ID, examples: CVE-1999-0067, CVE-2014-12345, CVE-2016-7654321
     * @type {string}
     * @memberof DomainVulnerability
     */
    cve: string;
    /**
     * Vulnerability severity score, according to Common Vulnerability Scoring System V2
     * @type {string}
     * @memberof DomainVulnerability
     */
    cvssV2Base?: string;
    /**
     * Vulnerability severity score, according to Common Vulnerability Scoring System V3
     * @type {string}
     * @memberof DomainVulnerability
     */
    cvssV3Base?: string;
    /**
     * Text description of the vulnerability
     * @type {string}
     * @memberof DomainVulnerability
     */
    description?: string;
    /**
     * Exploit status of vulnerability, one of: unproven, available, easilyaccessible, activelyused
     * @type {string}
     * @memberof DomainVulnerability
     */
    exploitStatus?: string;
    /**
     * legacy field, not populated
     * @type {string}
     * @memberof DomainVulnerability
     */
    name?: string;
    /**
     * Date when the vulnerability was published
     * @type {string}
     * @memberof DomainVulnerability
     */
    publishDate?: string;
    /**
     * Threat actors that exploits vulnerability
     * @type {Array<DomainVulnerabilityActor>}
     * @memberof DomainVulnerability
     */
    relatedActors?: Array<DomainVulnerabilityActor>;
    /**
     * Related finished Intelligence Reports to vulnerability, which usually describes the exploitation or attacks using those
     * @type {Array<DomainVulnerabilityReport>}
     * @memberof DomainVulnerability
     */
    relatedReports?: Array<DomainVulnerabilityReport>;
    /**
     * Malware Families (threats) that are known to be related to the vulnerability
     * @type {Array<DomainVulnerabilityRelatedThreat>}
     * @memberof DomainVulnerability
     */
    relatedThreats?: Array<DomainVulnerabilityRelatedThreat>;
    /**
     * Severity of the vulnerability, can be empty or one of: LOW, MEDIUM, HIGH, CRITICAL
     * @type {string}
     * @memberof DomainVulnerability
     */
    severity?: string;
    /**
     * Date when the vulnerability was last time updated in the CrowdStrike's database
     * @type {string}
     * @memberof DomainVulnerability
     */
    updatedTimestamp?: string;
}

/**
 * Check if a given object implements the DomainVulnerability interface.
 */
export function instanceOfDomainVulnerability(value: object): value is DomainVulnerability {
    if (!('cve' in value) || value['cve'] === undefined) return false;
    return true;
}

export function DomainVulnerabilityFromJSON(json: any): DomainVulnerability {
    return DomainVulnerabilityFromJSONTyped(json, false);
}

export function DomainVulnerabilityFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainVulnerability {
    if (json == null) {
        return json;
    }
    return {
        
        'affectedProducts': json['affected_products'] == null ? undefined : ((json['affected_products'] as Array<any>).map(DomainVulnerabilityAffectedProductFromJSON)),
        'communityIdentifiers': json['community_identifiers'] == null ? undefined : json['community_identifiers'],
        'cve': json['cve'],
        'cvssV2Base': json['cvss_v2_base'] == null ? undefined : json['cvss_v2_base'],
        'cvssV3Base': json['cvss_v3_base'] == null ? undefined : json['cvss_v3_base'],
        'description': json['description'] == null ? undefined : json['description'],
        'exploitStatus': json['exploit_status'] == null ? undefined : json['exploit_status'],
        'name': json['name'] == null ? undefined : json['name'],
        'publishDate': json['publish_date'] == null ? undefined : json['publish_date'],
        'relatedActors': json['related_actors'] == null ? undefined : ((json['related_actors'] as Array<any>).map(DomainVulnerabilityActorFromJSON)),
        'relatedReports': json['related_reports'] == null ? undefined : ((json['related_reports'] as Array<any>).map(DomainVulnerabilityReportFromJSON)),
        'relatedThreats': json['related_threats'] == null ? undefined : ((json['related_threats'] as Array<any>).map(DomainVulnerabilityRelatedThreatFromJSON)),
        'severity': json['severity'] == null ? undefined : json['severity'],
        'updatedTimestamp': json['updated_timestamp'] == null ? undefined : json['updated_timestamp'],
    };
}

export function DomainVulnerabilityToJSON(value?: DomainVulnerability | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'affected_products': value['affectedProducts'] == null ? undefined : ((value['affectedProducts'] as Array<any>).map(DomainVulnerabilityAffectedProductToJSON)),
        'community_identifiers': value['communityIdentifiers'],
        'cve': value['cve'],
        'cvss_v2_base': value['cvssV2Base'],
        'cvss_v3_base': value['cvssV3Base'],
        'description': value['description'],
        'exploit_status': value['exploitStatus'],
        'name': value['name'],
        'publish_date': value['publishDate'],
        'related_actors': value['relatedActors'] == null ? undefined : ((value['relatedActors'] as Array<any>).map(DomainVulnerabilityActorToJSON)),
        'related_reports': value['relatedReports'] == null ? undefined : ((value['relatedReports'] as Array<any>).map(DomainVulnerabilityReportToJSON)),
        'related_threats': value['relatedThreats'] == null ? undefined : ((value['relatedThreats'] as Array<any>).map(DomainVulnerabilityRelatedThreatToJSON)),
        'severity': value['severity'],
        'updated_timestamp': value['updatedTimestamp'],
    };
}

