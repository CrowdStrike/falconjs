/* tslint:disable */
/* eslint-disable */
/**
 * CrowdStrike API Specification
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and more information about API endpoints that don\'t yet support OAuth2, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation). To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`. Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: rolling
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A host group which targets a set of devices either through a dynamic assignment rule or a static set of hosts
 * @export
 * @interface ResponsesHostGroupV1
 */
export interface ResponsesHostGroupV1 {
    /**
     * The assignment rule of a group
     * @type {string}
     * @memberof ResponsesHostGroupV1
     */
    assignmentRule?: string;
    /**
     * The email of the user which created the policy
     * @type {string}
     * @memberof ResponsesHostGroupV1
     */
    createdBy: string;
    /**
     * The time at which the policy was created
     * @type {Date}
     * @memberof ResponsesHostGroupV1
     */
    createdTimestamp: Date;
    /**
     * An additional description of the group or the devices it targets
     * @type {string}
     * @memberof ResponsesHostGroupV1
     */
    description: string;
    /**
     * The method by which this host group is managed
     * @type {string}
     * @memberof ResponsesHostGroupV1
     */
    groupType?: ResponsesHostGroupV1GroupTypeEnum;
    /**
     * The identifier of this host group
     * @type {string}
     * @memberof ResponsesHostGroupV1
     */
    id: string;
    /**
     * The email of the user which last modified the policy
     * @type {string}
     * @memberof ResponsesHostGroupV1
     */
    modifiedBy: string;
    /**
     * The time at which the policy was last modified
     * @type {Date}
     * @memberof ResponsesHostGroupV1
     */
    modifiedTimestamp: Date;
    /**
     * The name of the group
     * @type {string}
     * @memberof ResponsesHostGroupV1
     */
    name: string;
}

/**
* @export
* @enum {string}
*/
export enum ResponsesHostGroupV1GroupTypeEnum {
    Static = 'static',
    Dynamic = 'dynamic'
}

export function ResponsesHostGroupV1FromJSON(json: any): ResponsesHostGroupV1 {
    return ResponsesHostGroupV1FromJSONTyped(json, false);
}

export function ResponsesHostGroupV1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponsesHostGroupV1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'assignmentRule': !exists(json, 'assignment_rule') ? undefined : json['assignment_rule'],
        'createdBy': json['created_by'],
        'createdTimestamp': (new Date(json['created_timestamp'])),
        'description': json['description'],
        'groupType': !exists(json, 'group_type') ? undefined : json['group_type'],
        'id': json['id'],
        'modifiedBy': json['modified_by'],
        'modifiedTimestamp': (new Date(json['modified_timestamp'])),
        'name': json['name'],
    };
}

export function ResponsesHostGroupV1ToJSON(value?: ResponsesHostGroupV1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'assignment_rule': value.assignmentRule,
        'created_by': value.createdBy,
        'created_timestamp': (value.createdTimestamp.toISOString()),
        'description': value.description,
        'group_type': value.groupType,
        'id': value.id,
        'modified_by': value.modifiedBy,
        'modified_timestamp': (value.modifiedTimestamp.toISOString()),
        'name': value.name,
    };
}

